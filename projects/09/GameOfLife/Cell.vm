function Cell.getIsAlive 0
push argument 0
pop pointer 0
push this 0
return
function Cell.getIsAliveNext 0
push argument 0
pop pointer 0
push this 1
return
function Cell.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 8
call Array.new 1
pop this 2
push pointer 0
return
function Cell.setIsAlive 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push constant 0
return
function Cell.setNeighbor 0
push argument 0
pop pointer 0
push argument 1
push this 2
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Cell.determineNextLiveState 3
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push constant 8
lt
not
if-goto WHILE_END0
push local 2
push this 2
add
pop pointer 1
push that 0
pop local 0
push local 0
call Cell.getIsAlive 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 1
add
pop local 1
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push this 0
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push constant 2
eq
push local 1
push constant 3
eq
or
pop this 1
goto IF_END1
label IF_FALSE1
push local 1
push constant 3
eq
pop this 1
label IF_END1
push constant 0
return
function Cell.advance 0
push argument 0
pop pointer 0
push this 1
pop this 0
push constant 0
return
function Cell.dispose 0
push argument 0
pop pointer 0
push this 2
call Memory.deAlloc 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
